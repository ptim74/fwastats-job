parameters:
- name: environmentName
  default: FWAStats
- name: resourceType
  default: VirtualMachine
- name: vmImage
  default: ubuntu-latest
- name: dotnetVersion
  default: '8.0.x'
- name: configuration
  default: 'Release'
- name: architecture
  default: 'linux-x86'
- name: selfContained
  default: 'false'
- name: artifactName
  default: 'FWAStatsJob'
- name: destinationFolder
  default: '~/fwastatsjob'

stages:
- stage: Build
  pool:
    vmImage: ${{parameters.vmImage}}
  jobs:
  - job: 'Build_Job'
    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET Core SDK'
      inputs:
        version: ${{parameters.dotnetVersion}}
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: 'restore'
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration ${{parameters.configuration}} -r ${{parameters.architecture}} --self-contained ${{parameters.selfContained}}'
    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: 'publish'
        publishWebProjects: false
        arguments: '--configuration ${{parameters.configuration}} -r ${{parameters.architecture}} --self-contained ${{parameters.selfContained}} --output $(Build.ArtifactStagingDirectory)'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)' 
        artifactName: '${{parameters.artifactName}}'

- stage: Deploy
  jobs:
  - deployment: 'Deploy_Job'
    environment:
      name: ${{parameters.environmentName}}
      resourceType: ${{parameters.resourceType}}
    workspace:
      clean: true
    strategy:
      runOnce:
        deploy:
          steps:
          - task: ExtractFiles@1
            displayName: 'Extract files'
            inputs:
              archiveFilePatterns: '$(Pipeline.Workspace)/${{parameters.artifactName}}/*.zip'
              destinationFolder: '${{parameters.destinationFolder}}'
              cleanDestinationFolder: false
              overwriteExistingFiles: true
            